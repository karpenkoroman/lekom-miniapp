// ==== –ö–æ–Ω—Ñ–∏–≥ ====
const HOOK = window.LEKOM_HOOK;

// ==== DOM ====
const scrStart = document.getElementById('screen-start');
const scrAudit = document.getElementById('screen-audit');
const scrPoll  = document.getElementById('screen-poll');

const btnGoAudit = document.getElementById('goAudit');
const btnGoPoll  = document.getElementById('goPoll');

const backFromAudit = document.getElementById('backFromAudit');
const backFromPoll  = document.getElementById('backFromPoll');

// –ù–∞–≤–∏–≥–∞—Ü–∏—è
const show = el => { if (el) el.style.display = 'flex'; }; // —ç–∫—Ä–∞–Ω—ã ‚Äî .screen —Å flex
const hide = el => { if (el) el.style.display = 'none'; };
function showScreen(name){
  hide(scrStart); hide(scrAudit); hide(scrPoll);
  if (name === 'start'){ show(scrStart); loadSummaryToStart(); }
  if (name === 'audit'){ show(scrAudit); updateAuditProgress(); }
  if (name === 'poll'){  show(scrPoll);  /* –∏—Ç–æ–≥–∏ –Ω–∞ —Å—Ç–∞—Ä—Ç–µ ‚Äî –∑–¥–µ—Å—å –Ω–µ –≥—Ä—É–∑–∏–º */ }
  window.scrollTo({top:0, behavior:'instant'});
}

// ==== –¢–µ–º–∞ ====
const themeToggle = document.getElementById('themeToggle');
const iconMoon = document.getElementById('iconMoon');
const iconSun  = document.getElementById('iconSun');
const themeLabel = document.getElementById('themeLabel');
function applyTheme(theme){
  document.documentElement.classList.toggle('theme-light', theme === 'light');
  document.documentElement.setAttribute('data-theme', theme);
  if (theme === 'light'){
    iconMoon.style.display = 'none'; iconSun.style.display = '';
    themeLabel.textContent = '–°–≤–µ—Ç–ª–∞—è';
  } else {
    iconMoon.style.display = ''; iconSun.style.display = 'none';
    themeLabel.textContent = '–¢—ë–º–Ω–∞—è';
  }
  localStorage.setItem('theme', theme);
}
themeToggle?.addEventListener('click', ()=>{
  const cur = document.documentElement.getAttribute('data-theme') || 'dark';
  applyTheme(cur === 'dark' ? 'light' : 'dark');
});

// ==== –¢–æ—Å—Ç ====
function toast(text, withOk = true, onOk = null){
  const wrap = document.createElement('div');
  wrap.className = 'toast-overlay';
  wrap.innerHTML = `
    <div class="toast-box">
      <div style="margin-bottom:10px">${text}</div>
      ${withOk ? '<button class="btn btn-primary" type="button">OK</button>' : ''}
    </div>`;
  document.body.appendChild(wrap);
  const btn = wrap.querySelector('button');
  if (btn){
    btn.onclick = ()=>{ document.body.removeChild(wrap); onOk && onOk(); };
  } else {
    wrap.addEventListener('click', ()=> document.body.removeChild(wrap));
  }
}

// ==== –°–≤–æ–¥–∫–∞ –Ω–∞ —Å—Ç–∞—Ä—Ç–µ ====
async function loadSummaryToStart(){
  const box = document.getElementById('summaryContent');
  if (!box) return;
  box.innerHTML = '<div class="muted">–ó–∞–≥—Ä—É–∑–∫–∞‚Ä¶</div>';
  try{
    const res = await fetch(HOOK + '?summary=webinar');
    const data = await res.json();
    const wrap = document.createElement('div');
    const total = data.total || 0;
    wrap.innerHTML = `<div class="muted" style="margin-bottom:6px">–í—Å–µ–≥–æ –≥–æ–ª–æ—Å–æ–≤: ${total}</div>`;
    (data.items || []).forEach(it=>{
      const pct = total ? Math.round((it.count/total)*100) : 0;
      const row = document.createElement('div');
      row.className = 'summary-row';
      row.innerHTML = `
        <div class="summary-head">
          <div>${it.topic}</div>
          <div class="muted">${it.count} (${pct}%)</div>
        </div>
        <div class="summary-bar"><div class="summary-fill" style="width:${pct}%"></div></div>
      `;
      wrap.appendChild(row);
    });
    if (!(data.items || []).length){
      const empty = document.createElement('div');
      empty.className = 'muted';
      empty.textContent = '–ü–æ–∫–∞ –Ω–µ—Ç –≥–æ–ª–æ—Å–æ–≤.';
      wrap.appendChild(empty);
    }
    box.innerHTML = '';
    box.appendChild(wrap);
  }catch(e){
    box.innerHTML = '<span class="muted">–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–≤–æ–¥–∫—É.</span>';
  }
}

// ==== –í–µ–±–∏–Ω–∞—Ä: –º—É–ª—å—Ç–∏–≤—ã–±–æ—Ä, ¬´–î—Ä—É–≥–∞—è —Ç–µ–º–∞¬ª ====
document.querySelectorAll('.poll-opt').forEach(p=>{
  p.addEventListener('click', ()=>{
    p.classList.toggle('selected');
    const isOther = p.dataset.topic === '–î—Ä—É–≥–∞—è —Ç–µ–º–∞';
    document.getElementById('pollOtherBox').style.display =
      (isOther && p.classList.contains('selected')) ? 'block' : 'none';
  });
});

document.getElementById('sendPoll')?.addEventListener('click', async ()=>{
  const selected = [...document.querySelectorAll('.poll-opt.selected')].map(x=>x.dataset.topic);
  if (!selected.length){ toast('–í—ã–±–µ—Ä–∏—Ç–µ —Ç–µ–º—É'); return; }
  const otherText = selected.includes('–î—Ä—É–≥–∞—è —Ç–µ–º–∞') ? (document.getElementById('pollOther').value || '').trim() : '';

  try{
    for (const topic of selected){
      const payload = { type:'poll', poll:'webinar_topic', topic, other: topic==='–î—Ä—É–≥–∞—è —Ç–µ–º–∞' ? otherText : '' };
      await fetch(HOOK + '?q=' + encodeURIComponent(JSON.stringify(payload)));
    }
    toast('–ì–æ–ª–æ—Å —É—á—Ç—ë–Ω! –°–ø–∞—Å–∏–±–æ üôå');
    // –æ—á–∏—Å—Ç–∏–º –≤—ã–±–æ—Ä
    document.querySelectorAll('.poll-opt.selected').forEach(x=>x.classList.remove('selected'));
    document.getElementById('pollOther').value = '';
    document.getElementById('pollOtherBox').style.display = 'none';
    // –æ–±–Ω–æ–≤–∏–º —Å–≤–æ–¥–∫—É –Ω–∞ —Å—Ç–∞—Ä—Ç–µ (–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–≤–∏–¥–∏—Ç, –≤–µ—Ä–Ω—É–≤—à–∏—Å—å)
    // loadSummaryToStart(); // –º–æ–∂–Ω–æ –Ω–µ –¥–µ—Ä–≥–∞—Ç—å —Å–µ–π—á–∞—Å
  }catch(e){
    toast('–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≥–æ–ª–æ—Å. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.');
  }
});

// ==== –ê—É–¥–∏—Ç ====
function getAuditAnswers(){
  const obj = {};
  document.querySelectorAll('#auditForm .pill.selected').forEach(p=>{
    const q = p.dataset.q;
    const score = Number(p.dataset.score || 0);
    obj[q] = { text: p.textContent.trim(), score };
  });
  return obj;
}
function updateAuditProgress(){
  const total = 11;
  const answered = Object.keys(getAuditAnswers()).length;
  document.getElementById('auditProgress').textContent = `–û—Ç–≤–µ—Ç—ã: ${answered} / ${total}`;
  const sub = document.getElementById('btnAuditSub');
  if (sub) sub.textContent = `(–æ—Ç–≤–µ—Ç–æ–≤ ${answered} –∏–∑ 11)`;
}
// –æ–¥–∏–Ω–æ—á–Ω—ã–π –≤—ã–±–æ—Ä –≤ –∫–∞–∂–¥–æ–º –≤–æ–ø—Ä–æ—Å–µ
document.querySelectorAll('#auditForm .pill').forEach(p=>{
  p.addEventListener('click', ()=>{
    const q = p.dataset.q;
    document.querySelectorAll(`#auditForm .pill[data-q="${q}"]`).forEach(x=>x.classList.remove('selected'));
    p.classList.add('selected');
    updateAuditProgress();
  });
});

function pluralBall(n){
  if (n%100>=11 && n%100<=14) return '–±–∞–ª–ª–æ–≤';
  const m = n%10;
  if (m===1) return '–±–∞–ª–ª';
  if (m>=2 && m<=4) return '–±–∞–ª–ª–∞';
  return '–±–∞–ª–ª–æ–≤';
}

let lastAuditResult = { score:0, verdict:'', advice:'', answers:{} };

document.getElementById('btnAuditResult')?.addEventListener('click', async ()=>{
  const answers = getAuditAnswers();
  const total = 11;
  const score = Object.values(answers).reduce((s,a)=>s+(a.score||0),0);

  let verdict = '–ù—É–∂–µ–Ω –∞—É–¥–∏—Ç';
  let advice  = '–¢—Ä–µ–±—É–µ—Ç—Å—è –ø–µ—Ä–µ—Å–º–æ—Ç—Ä –ø–∞—Ä–∫–∞ –∏ –±—é–¥–∂–µ—Ç–∞.';
  if (score >= 9){ verdict='–ó—Ä–µ–ª–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞'; advice='–£ –≤–∞—Å –≤—Å—ë –ø–æ–¥ –∫–æ–Ω—Ç—Ä–æ–ª–µ–º, –ø—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ.'; }
  else if (score >= 6){ verdict='–ß–∞—Å—Ç–∏—á–Ω—ã–π –∫–æ–Ω—Ç—Ä–æ–ª—å'; advice='–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º —É—Ç–æ—á–Ω–∏—Ç—å –±—é–¥–∂–µ—Ç –∏ –ø—Ä–æ—Ü–µ—Å—Å—ã.'; }

  lastAuditResult = {
    score, verdict, advice,
    answers: Object.fromEntries(Object.entries(answers).map(([k,v])=>[k,v.text]))
  };

  // –ü–æ–∫–∞–∑ –≤ UI
  document.getElementById('resultText').innerHTML = `${score} ${pluralBall(score)} –∏–∑ 11`;
  const v = document.getElementById('resultVerdict');
  const a = document.getElementById('resultAdvice');
  v.textContent = verdict; v.style.display = '';
  a.textContent = advice;  a.style.display = '';

  // –û—Ç–ø—Ä–∞–≤–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
  try{
    await fetch(HOOK + '?q=' + encodeURIComponent(JSON.stringify({
      type:'result',
      score, verdict, advice,
      answers: lastAuditResult.answers
    })));
  }catch(e){ /* —Ç–∏—Ö–æ */ }
});

// ==== –≠–∫—Å–ø–µ—Ä—Ç –∏ –ª–∏–¥ ====
document.getElementById('ctaExpert')?.addEventListener('click', async ()=>{
  const msg =
    `–î–æ–±—Ä—ã–π –¥–µ–Ω—å! –•–æ—á—É –æ–±—Å—É–¥–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–∞–º–æ–∞—É–¥–∏—Ç–∞ –ø–µ—á–∞—Ç–∏.\n`+
    `–ò—Ç–æ–≥: ${lastAuditResult.score} ${pluralBall(lastAuditResult.score)} –∏–∑ 11\n`+
    `–í–µ—Ä–¥–∏–∫—Ç: ${lastAuditResult.verdict}\n`+
    `–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: ${lastAuditResult.advice}`;
  try{ await navigator.clipboard.writeText(msg); }catch(_){}
  toast('–¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω.<br>–í—Å—Ç–∞–≤—å—Ç–µ –µ–≥–æ –≤ —á–∞—Ç —Å –ò–≥–æ—Ä–µ–º –ß–µ–ª–µ–±–∞–µ–≤—ã–º, –∫–æ–º–º–µ—Ä—á–µ—Å–∫–∏–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–æ–º –õ–ï–ö–û–ú.', true, ()=>{
    // –û—Ç–∫—Ä—ã–≤–∞–µ–º —á–∞—Ç –ø–æ—Å–ª–µ OK
    window.open('https://t.me/chelebaev', '_blank');
  });
});

document.getElementById('toggleLead')?.addEventListener('click', ()=>{
  const box = document.getElementById('leadForm');
  box.style.display = (box.style.display === 'none' || box.style.display === '') ? 'block' : 'none';
});

document.getElementById('sendLead')?.addEventListener('click', async ()=>{
  const name = document.getElementById('leadName').value.trim();
  const company = document.getElementById('leadCompany').value.trim();
  const phone = document.getElementById('leadPhone').value.trim();
  if (!name || !phone){ toast('–£–∫–∞–∂–∏—Ç–µ –∏–º—è –∏ –∫–æ–Ω—Ç–∞–∫—Ç.'); return; }

  try{
    await fetch(HOOK + '?q=' + encodeURIComponent(JSON.stringify({
      type:'lead',
      name, company, phone,
      result: lastAuditResult,
      consent:true,
      policyUrl:'https://lekom.ru/politika-konfidencialnosti/'
    })));
    toast('–°–ø–∞—Å–∏–±–æ! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏.');
    // –æ—á–∏—Å—Ç–∫–∞
    document.getElementById('leadName').value = '';
    document.getElementById('leadCompany').value = '';
    document.getElementById('leadPhone').value = '';
    document.getElementById('leadForm').style.display = 'none';
  }catch(e){
    toast('–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.');
  }
});

// ==== –ù–∞–≤–∏–≥–∞—Ü–∏—è ====
btnGoAudit?.addEventListener('click', ()=> showScreen('audit'));
btnGoPoll ?.addEventListener('click', ()=> showScreen('poll'));
backFromAudit?.addEventListener('click', ()=> showScreen('start'));
backFromPoll ?.addEventListener('click', ()=> showScreen('start'));

// ==== –°—Ç–∞—Ä—Ç ====
showScreen('start');
