(() => {
  'use strict';

  // ================== CONFIG ==================
  const HOOK = (window && window.LEKOM_HOOK) || '';

  // Telegram WebApp (–µ—Å–ª–∏ –º–∏–Ω–∏-–∞–ø–ø –æ—Ç–∫—Ä—ã—Ç –≤ Telegram)
  const TG = (window.Telegram && window.Telegram.WebApp) ? window.Telegram.WebApp : null;
  const TG_USER = TG?.initDataUnsafe?.user || null;

  // ================== SAFE DOM ==================
  const $  = sel => document.querySelector(sel);
  const $$ = sel => Array.from(document.querySelectorAll(sel));

  // Screens
  const scrStart = $('#screen-start');
  const scrAudit = $('#screen-audit');
  const scrPoll  = $('#screen-poll');

  // Nav
  const btnGoAudit    = $('#goAudit');
  const btnGoPoll     = $('#goPoll');
  const backFromAudit = $('#backFromAudit');
  const backFromPoll  = $('#backFromPoll');

  // Theme
  const themeToggle = $('#themeToggle');
  const iconMoon    = $('#iconMoon');
  const iconSun     = $('#iconSun');
  const themeLabel  = $('#themeLabel');

  // Start summary
  const summaryBox = $('#summaryContent');

  // Audit DOM
  const auditForm       = $('#auditForm');
  const auditProgressEl = $('#auditProgress');
  const btnAuditResult  = $('#btnAuditResult');
  const btnAuditSub     = $('#btnAuditSub');
  const resultText      = $('#resultText');
  const resultVerdict   = $('#resultVerdict');
  const resultAdvice    = $('#resultAdvice');

  // CTA in result
  const btnExpert   = $('#ctaExpert');
  const btnLeadTgl  = $('#toggleLead');
  const leadForm    = $('#leadForm');
  const leadName    = $('#leadName');
  const leadCompany = $('#leadCompany');
  const leadPhone   = $('#leadPhone');
  const btnSendLead = $('#sendLead');

  // Poll DOM
  const pollOptions   = $$('#screen-poll .poll-opt');
  const pollOtherBox  = $('#pollOtherBox');
  const pollOtherText = $('#pollOther');
  const btnSendPoll   = $('#sendPoll');

  // ================== UTIL ==================
  function show(el){ if (el) { el.style.display = 'flex'; el.style.flexDirection = 'column'; } }
  function hide(el){ if (el) el.style.display = 'none'; }

  function showScreen(name){
    hide(scrStart); hide(scrAudit); hide(scrPoll);
    if (name === 'start'){ show(scrStart); loadSummaryToStart(); }
    if (name === 'audit'){ show(scrAudit); updateAuditProgress(); }
    if (name === 'poll'){  show(scrPoll); }
    window.scrollTo({ top: 0, behavior: 'instant' });
  }

  function pluralBall(n){
    if (n % 100 >= 11 && n % 100 <= 14) return '–±–∞–ª–ª–æ–≤';
    const m = n % 10;
    if (m === 1) return '–±–∞–ª–ª';
    if (m >= 2 && m <= 4) return '–±–∞–ª–ª–∞';
    return '–±–∞–ª–ª–æ–≤';
  }

  // –¢–æ—Å—Ç / –º–æ–¥–∞–ª–∫–∞-–ø–æ–¥—Å–∫–∞–∑–∫–∞
  function toast(html, withOk = true, onOk = null){
    const wrap = document.createElement('div');
    wrap.className = 'toast-overlay';
    wrap.innerHTML = `
      <div class="toast-box">
        <div style="margin-bottom:10px">${html}</div>
        ${withOk ? '<button class="btn btn-primary" type="button">OK</button>' : ''}
      </div>`;
    document.body.appendChild(wrap);
    const btn = wrap.querySelector('button');
    if (btn){
      btn.onclick = ()=>{ document.body.removeChild(wrap); onOk && onOk(); };
    } else {
      wrap.addEventListener('click', ()=> document.body.removeChild(wrap));
    }
  }

  // ================== THEME ==================
  function applyTheme(theme){
    document.documentElement.classList.toggle('theme-light', theme === 'light');
    document.documentElement.setAttribute('data-theme', theme);
    if (themeLabel){
      if (theme === 'light'){
        if (iconMoon) iconMoon.style.display = 'none';
        if (iconSun)  iconSun.style.display  = '';
        themeLabel.textContent = '–°–≤–µ—Ç–ª–∞—è';
      } else {
        if (iconMoon) iconMoon.style.display = '';
        if (iconSun)  iconSun.style.display  = 'none';
        themeLabel.textContent = '–¢—ë–º–Ω–∞—è';
      }
    }
    try{ localStorage.setItem('theme', theme); }catch(_){}
  }

  themeToggle?.addEventListener('click', () => {
    const cur = document.documentElement.getAttribute('data-theme') || 'dark';
    applyTheme(cur === 'dark' ? 'light' : 'dark');
  });

  // ================== SUMMARY (start) ==================
  async function loadSummaryToStart(){
    if (!summaryBox) return;
    summaryBox.innerHTML = '<div class="muted">–ó–∞–≥—Ä—É–∑–∫–∞‚Ä¶</div>';
    try{
      const res  = await fetch(HOOK + '?summary=webinar', { cache: 'no-store' });
      const data = await res.json(); // { total, items:[{topic,count}] }
      const wrap = document.createElement('div');
      const total = data.total || 0;
      wrap.innerHTML = `<div class="muted" style="margin-bottom:6px">–í—Å–µ–≥–æ –≥–æ–ª–æ—Å–æ–≤: ${total}</div>`;

      const items = (data.items || []).slice().sort((a,b)=> (b.count||0)-(a.count||0));
      items.forEach(it=>{
        const pct = total ? Math.round((it.count/total)*100) : 0;
        const row = document.createElement('div');
        row.className = 'summary-row';
        row.innerHTML = `
          <div class="summary-head">
            <div>${it.topic}</div>
            <div class="muted">${it.count} (${pct}%)</div>
          </div>
          <div class="summary-bar"><div class="summary-fill" style="width:${pct}%"></div></div>
        `;
        wrap.appendChild(row);
      });

      if (!items.length){
        const empty = document.createElement('div');
        empty.className = 'muted';
        empty.textContent = '–ü–æ–∫–∞ –Ω–µ—Ç –≥–æ–ª–æ—Å–æ–≤.';
        wrap.appendChild(empty);
      }

      summaryBox.innerHTML = '';
      summaryBox.appendChild(wrap);
    }catch(e){
      console.error('–û—à–∏–±–∫–∞ —Å–≤–æ–¥–∫–∏:', e);
      summaryBox.innerHTML = '<span class="muted">–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–≤–æ–¥–∫—É.</span>';
    }
  }

  // ================== POLL (multi-select) ==================
  pollOptions.forEach(p=>{
    p.addEventListener('click', ()=>{
      p.classList.toggle('selected');
      if (p.dataset.topic === '–î—Ä—É–≥–∞—è —Ç–µ–º–∞'){
        const on = p.classList.contains('selected');
        if (pollOtherBox) pollOtherBox.style.display = on ? 'block' : 'none';
      }
    });
  });

  let isSendingPoll = false;

  btnSendPoll?.addEventListener('click', async ()=>{
    if (isSendingPoll) return;
    const selected = $$('#screen-poll .poll-opt.selected').map(x=>x.dataset.topic);
    if (!selected.length){ toast('–í—ã–±–µ—Ä–∏—Ç–µ —Ç–µ–º—É'); return; }
    const otherText = selected.includes('–î—Ä—É–≥–∞—è —Ç–µ–º–∞') ? (pollOtherText?.value || '').trim() : '';

    // –ú–æ–º–µ–Ω—Ç–∞–ª—å–Ω—ã–π –æ—Ç–∫–ª–∏–∫
    toast('–ì–æ–ª–æ—Å —É—á—Ç—ë–Ω! –°–ø–∞—Å–∏–±–æ üôå');

    isSendingPoll = true;
    const makePayload = (topic) => ({
      type: 'poll',
      poll: 'webinar_topic',
      topic,
      other: topic === '–î—Ä—É–≥–∞—è —Ç–µ–º–∞' ? otherText : '',
      // –ø—Ä–æ–∫–∏–Ω–µ–º Telegram-–ø–æ–ª—è (–µ—Å–ª–∏ –µ—Å—Ç—å)
      initData: TG_USER ? { user: TG_USER } : null,
      user_id: TG_USER?.id || '',
      username: TG_USER?.username || '',
      first_name: TG_USER?.first_name || ''
    });

    // –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤—Å–µ –≤—ã–±—Ä–∞–Ω–Ω—ã–µ —Ç–µ–º—ã –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ
    const tasks = selected.map(topic =>
      fetch(HOOK + '?q=' + encodeURIComponent(JSON.stringify(makePayload(topic))), {
        method:'GET', cache:'no-store'
      }).catch(()=> null)
    );
    Promise.allSettled(tasks).finally(()=> { isSendingPoll = false; });

    // –æ—á–∏—Å—Ç–∫–∞ UI
    $$('#screen-poll .poll-opt.selected').forEach(x=>x.classList.remove('selected'));
    if (pollOtherText) pollOtherText.value = '';
    if (pollOtherBox)  pollOtherBox.style.display = 'none';
  });

  // ================== AUDIT ==================
  const TOTAL_Q = 11;

  function getAuditAnswers(){
    const obj = {};
    $$('#auditForm .pill.selected').forEach(p=>{
      const q = p.dataset.q;
      const score = Number(p.dataset.score || 0);
      obj[q] = { text: p.textContent.trim(), score };
    });
    return obj;
  }

  function updateAuditProgress(){
    const answered = Object.keys(getAuditAnswers()).length;
    if (auditProgressEl) auditProgressEl.textContent = `–û—Ç–≤–µ—Ç—ã: ${answered} / ${TOTAL_Q}`;
    if (btnAuditSub)     btnAuditSub.textContent     = `(–æ—Ç–≤–µ—Ç–æ–≤ ${answered} –∏–∑ ${TOTAL_Q})`;
  }

  // –æ–¥–∏–Ω–æ—á–Ω—ã–π –≤—ã–±–æ—Ä –Ω–∞ –≤–æ–ø—Ä–æ—Å
  $$('#auditForm .pill').forEach(p=>{
    p.addEventListener('click', ()=>{
      const q = p.dataset.q;
      $$('#auditForm .pill[data-q="'+q+'"]').forEach(x=>x.classList.remove('selected'));
      p.classList.add('selected');
      updateAuditProgress();
    });
  });

  let lastAuditResult = { score:0, verdict:'', advice:'', answers:{} };

  btnAuditResult?.addEventListener('click', async ()=>{
    const answers = getAuditAnswers();
    const score = Object.values(answers).reduce((s,a)=> s + (a.score || 0), 0);

    // –í–µ—Ä–¥–∏–∫—Ç/—Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è (—É—á–ª–∏ ¬´–¢—Ä–µ–±—É–µ—Ç—Å—è –ø–µ—Ä–µ—Å–º–æ—Ç—Ä...¬ª)
    let verdict = '–ù—É–∂–µ–Ω –∞—É–¥–∏—Ç';
    let advice  = '–¢—Ä–µ–±—É–µ—Ç—Å—è –ø–µ—Ä–µ—Å–º–æ—Ç—Ä –ø–∞—Ä–∫–∞ –∏ –±—é–¥–∂–µ—Ç–∞.';
    if (score >= 9){       verdict='–ó—Ä–µ–ª–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞';      advice='–£ –≤–∞—Å –≤—Å—ë –ø–æ–¥ –∫–æ–Ω—Ç—Ä–æ–ª–µ–º, –ø—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ.'; }
    else if (score >= 6){  verdict='–ß–∞—Å—Ç–∏—á–Ω—ã–π –∫–æ–Ω—Ç—Ä–æ–ª—å';   advice='–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º —É—Ç–æ—á–Ω–∏—Ç—å –±—é–¥–∂–µ—Ç –∏ –ø—Ä–æ—Ü–µ—Å—Å—ã.'; }

    lastAuditResult = {
      score, verdict, advice,
      answers: Object.fromEntries(Object.entries(answers).map(([k,v])=>[k, v.text]))
    };

    // –ü–æ–∫–∞–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ (–±–µ–∑ –≤—Å–ø–ª—ã–≤–∞—à–µ–∫)
    if (resultText) {
      resultText.innerHTML = `${score} ${pluralBall(score)} –∏–∑ ${TOTAL_Q}`;
    }
    if (resultVerdict){ resultVerdict.textContent = verdict; resultVerdict.style.display=''; }
    if (resultAdvice){  resultAdvice.textContent  = advice;  resultAdvice.style.display=''; }

    // –®–ª—ë–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç (–º–æ–ª—á–∞)
    try{
      const payload = {
        type: 'result',
        score, verdict, advice,
        answers: lastAuditResult.answers,
        initData: TG_USER ? { user: TG_USER } : null,
        user_id: TG_USER?.id || '',
        username: TG_USER?.username || '',
        first_name: TG_USER?.first_name || ''
      };
      fetch(HOOK + '?q=' + encodeURIComponent(JSON.stringify(payload)), { method:'GET', cache:'no-store' })
        .catch(()=>null);
    }catch(_){}
  });

  // ================== EXPERT & LEAD ==================
  btnExpert?.addEventListener('click', async ()=>{
    const msg =
      `–î–æ–±—Ä—ã–π –¥–µ–Ω—å! –•–æ—á—É –æ–±—Å—É–¥–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–∞–º–æ–∞—É–¥–∏—Ç–∞ –ø–µ—á–∞—Ç–∏.\n`+
      `–ò—Ç–æ–≥: ${lastAuditResult.score} ${pluralBall(lastAuditResult.score)} –∏–∑ ${TOTAL_Q}\n`+
      `–í–µ—Ä–¥–∏–∫—Ç: ${lastAuditResult.verdict}\n`+
      `–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: ${lastAuditResult.advice}`;
    try{ await navigator.clipboard.writeText(msg); }catch(_){}

    toast(
      '–¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω.<br>–í—Å—Ç–∞–≤—å—Ç–µ –µ–≥–æ –≤ —á–∞—Ç —Å –ò–≥–æ—Ä–µ–º –ß–µ–ª–µ–±–∞–µ–≤—ã–º, –∫–æ–º–º–µ—Ä—á–µ—Å–∫–∏–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–æ–º –õ–ï–ö–û–ú.',
      true,
      ()=> { window.open('https://t.me/chelebaev', '_blank'); }
    );
  });

  btnLeadTgl?.addEventListener('click', ()=>{
    if (!leadForm) return;
    const shown = leadForm.style.display === 'block';
    leadForm.style.display = shown ? 'none' : 'block';
    if (!shown){ leadName?.focus(); }
  });

  let isSendingLead = false;

  btnSendLead?.addEventListener('click', async ()=>{
    if (isSendingLead) return;
    const name    = (leadName?.value || '').trim();
    const company = (leadCompany?.value || '').trim();
    const phone   = (leadPhone?.value || '').trim();
    if (!name || !phone){ toast('–£–∫–∞–∂–∏—Ç–µ –∏–º—è –∏ –∫–æ–Ω—Ç–∞–∫—Ç (—Ç–µ–ª–µ—Ñ–æ–Ω –∏–ª–∏ email).'); return; }

    // –º–æ–º–µ–Ω—Ç–∞–ª—å–Ω—ã–π –æ—Ç–∫–ª–∏–∫
    toast('–°–ø–∞—Å–∏–±–æ! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏.');

    isSendingLead = true;
    const payload = {
      type:'lead',
      name, company, phone,
      result: lastAuditResult,
      consent: true,
      policyUrl: 'https://lekom.ru/politika-konfidencialnosti/',
      initData: TG_USER ? { user: TG_USER } : null,
      user_id: TG_USER?.id || '',
      username: TG_USER?.username || '',
      first_name: TG_USER?.first_name || ''
    };

    fetch(HOOK + '?q=' + encodeURIComponent(JSON.stringify(payload)), { method:'GET', cache:'no-store' })
      .catch(()=> toast('–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.'))
      .finally(()=> { isSendingLead = false; });

    // –æ—á–∏—Å—Ç–∫–∞ —Ñ–æ—Ä–º—ã —Å—Ä–∞–∑—É
    if (leadName)    leadName.value = '';
    if (leadCompany) leadCompany.value = '';
    if (leadPhone)   leadPhone.value = '';
    if (leadForm)    leadForm.style.display = 'none';
  });

  // ================== NAV ==================
  btnGoAudit?.addEventListener('click', ()=> showScreen('audit'));
  btnGoPoll ?.addEventListener('click', ()=> showScreen('poll'));
  backFromAudit?.addEventListener('click', ()=> showScreen('start'));
  backFromPoll ?.addEventListener('click', ()=> showScreen('start'));

  // ================== INIT ==================
  (function ensureTheme(){
    try{
      const saved = localStorage.getItem('theme');
      if (saved === 'light' || saved === 'dark') applyTheme(saved);
    }catch(_){}
  })();

  showScreen('start');
})();
