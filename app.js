// ==== –ù–ê–°–¢–†–û–ô–ö–ò =============================================================
const HOOK = window.LEKOM_HOOK; // –±–µ—Ä—ë–º –∏–∑ index.html
// ===========================================================================

// –ö–≠–® DOM
const scrStart = document.getElementById('screen-start');
const scrAudit = document.getElementById('screen-audit');
const scrPoll  = document.getElementById('screen-poll');

const btnGoAudit = document.getElementById('goAudit');
const btnGoPoll  = document.getElementById('goPoll');

const backFromAudit = document.getElementById('backFromAudit');
const backFromPoll  = document.getElementById('backFromPoll');

// –í—Å–ø–æ–º–æ–≥–∞–ª–∫–∏
const show = (el) => { if (el) el.style.display = 'block'; };
const hide = (el) => { if (el) el.style.display = 'none'; };
function showScreen(name){
  hide(scrStart); hide(scrAudit); hide(scrPoll);
  if (name === 'start'){ show(scrStart); loadSummaryToStart(); }
  if (name === 'audit'){ show(scrAudit); updateAuditProgress(); }
  if (name === 'poll'){  show(scrPoll);  loadPollSummary();  }
  window.scrollTo({top:0, behavior:'instant'});
}

// ==== –ì–û–õ–û–°–û–í–ê–ù–ò–ï –ü–û –¢–ï–ú–ê–ú =================================================

// –º—É–ª—å—Ç–∏–≤—ã–±–æ—Ä —Ç–µ–º
document.querySelectorAll('.poll-opt').forEach(btn=>{
  btn.addEventListener('click', ()=>{
    btn.classList.toggle('selected');
    const isOther = btn.dataset.topic === '–î—Ä—É–≥–∞—è —Ç–µ–º–∞';
    document.getElementById('pollOtherBox').style.display =
      (isOther && btn.classList.contains('selected')) ? 'block' : 'none';
  });
});

// –æ—Ç–ø—Ä–∞–≤–∫–∞ –≥–æ–ª–æ—Å–æ–≤ (–∫–∞–∂–¥—É—é –≤—ã–±—Ä–∞–Ω–Ω—É—é —Ç–µ–º—É —à–ª—ë–º –æ—Ç–¥–µ–ª—å–Ω–æ–π –∑–∞–ø–∏—Å—å—é)
document.getElementById('sendPoll')?.addEventListener('click', async ()=>{
  const selected = [...document.querySelectorAll('.poll-opt.selected')].map(x=>x.dataset.topic);
  if (!selected.length){ toast('–í—ã–±–µ—Ä–∏—Ç–µ —Ç–µ–º—É'); return; }

  const otherSelected = selected.includes('–î—Ä—É–≥–∞—è —Ç–µ–º–∞');
  const otherText = otherSelected ? (document.getElementById('pollOther').value || '').trim() : '';

  try{
    // –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ, —á—Ç–æ–±—ã –Ω–µ –¥—É–±–ª–∏—Ä–æ–≤–∞–ª–æ
    for (const topic of selected){
      const payload = {
        type: 'poll',
        poll: 'webinar_topic',
        topic,
        other: topic === '–î—Ä—É–≥–∞—è —Ç–µ–º–∞' ? otherText : ''
      };
      await fetch(HOOK + '?q=' + encodeURIComponent(JSON.stringify(payload)));
    }
    toast('–ì–æ–ª–æ—Å —É—á—Ç—ë–Ω! –°–ø–∞—Å–∏–±–æ üôå');
    await loadPollSummary();
    // –æ—á–∏—â–∞–µ–º –≤—ã–±–æ—Ä
    document.querySelectorAll('.poll-opt.selected').forEach(x=>x.classList.remove('selected'));
    document.getElementById('pollOtherBox').style.display = 'none';
    document.getElementById('pollOther').value = '';
  }catch(err){
    toast('–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≥–æ–ª–æ—Å. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.');
  }
});

// –∑–∞–≥—Ä—É–∑–∫–∞ —Å–≤–æ–¥–∫–∏ (–¥–ª—è —ç–∫—Ä–∞–Ω–∞ Poll)
async function loadPollSummary(){
  const box = document.getElementById('pollSummary');
  if (!box) return;
  box.textContent = '–ó–∞–≥—Ä—É–∑–∫–∞‚Ä¶';
  try{
    // –°–∫—Ä–∏–ø—Ç –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç JSON: { total, items:[{topic,count},...] }
    const res = await fetch(HOOK + '?summary=webinar');
    const data = await res.json();

    box.innerHTML = '';
    const total = data.total || 0;
    const head = document.createElement('div');
    head.className = 'muted';
    head.textContent = `–í—Å–µ–≥–æ –≥–æ–ª–æ—Å–æ–≤: ${total}`;
    box.appendChild(head);

    (data.items || []).forEach(it=>{
      const row = document.createElement('div');
      row.className = 'summary-row';
      const pct = total ? Math.round((it.count/total)*100) : 0;
      row.innerHTML = `
        <div class="summary-head">
          <div>${it.topic}</div>
          <div class="muted">${it.count} (${pct}%)</div>
        </div>
        <div class="summary-bar"><div class="summary-fill" style="width:${pct}%"></div></div>
      `;
      box.appendChild(row);
    });
    if (!data.items?.length){
      const empty = document.createElement('div');
      empty.className = 'muted';
      empty.textContent = '–ü–æ–∫–∞ –Ω–µ—Ç –≥–æ–ª–æ—Å–æ–≤.';
      box.appendChild(empty);
    }
  }catch(e){
    box.innerHTML = '<span class="muted">–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–≤–æ–¥–∫—É.</span>';
  }
}

// —Å–≤–æ–¥–∫–∞ –Ω–∞ —Å—Ç–∞—Ä—Ç–æ–≤–æ–º —ç–∫—Ä–∞–Ω–µ
async function loadSummaryToStart(){
  const box = document.getElementById('summaryContent');
  if (!box) return;
  box.innerHTML = '<div class="muted">–ó–∞–≥—Ä—É–∑–∫–∞‚Ä¶</div>';
  try{
    const res = await fetch(HOOK + '?summary=webinar');
    const data = await res.json();

    const wrap = document.createElement('div');
    const total = data.total || 0;
    wrap.innerHTML = `<div class="muted" style="margin-bottom:6px">–í—Å–µ–≥–æ –≥–æ–ª–æ—Å–æ–≤: ${total}</div>`;
    (data.items || []).slice(0,5).forEach(it=>{
      const pct = total ? Math.round((it.count/total)*100) : 0;
      const row = document.createElement('div');
      row.className = 'summary-row';
      row.innerHTML = `
        <div class="summary-head">
          <div>${it.topic}</div>
          <div class="muted">${it.count} (${pct}%)</div>
        </div>
        <div class="summary-bar"><div class="summary-fill" style="width:${pct}%"></div></div>
      `;
      wrap.appendChild(row);
    });
    box.innerHTML = '';
    box.appendChild(wrap);
  }catch(e){
    box.innerHTML = '<span class="muted">–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–≤–æ–¥–∫—É.</span>';
  }
}

// ==== –ê–£–î–ò–¢ (–ø—Ä–æ–≥—Ä–µ—Å—Å/–∏—Ç–æ–≥–∏) ===============================================
// –ø–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã
function getAuditAnswers(){
  const obj = {};
  document.querySelectorAll('#auditForm .pill.selected').forEach(p=>{
    const q = p.dataset.q;
    const score = Number(p.dataset.score || 0);
    obj[q] = { text: p.textContent.trim(), score };
  });
  return obj;
}
function updateAuditProgress(){
  const total = 11;
  const answered = Object.keys(getAuditAnswers()).length;
  document.getElementById('auditProgress').textContent = `–û—Ç–≤–µ—Ç—ã: ${answered} / ${total}`;
  const sub = document.getElementById('btnAuditSub');
  if (sub) sub.textContent = `(–æ—Ç–≤–µ—Ç–æ–≤ ${answered} –∏–∑ 11)`;
}
document.querySelectorAll('#auditForm .pill').forEach(p=>{
  p.addEventListener('click', ()=>{
    // –æ–¥–∏–Ω–æ—á–Ω—ã–π –≤—ã–±–æ—Ä –≤ –≤–æ–ø—Ä–æ—Å–µ
    const q = p.dataset.q;
    document.querySelectorAll(`#auditForm .pill[data-q="${q}"]`).forEach(x=>x.classList.remove('selected'));
    p.classList.add('selected');
    updateAuditProgress();
  });
});

// —Ä–∞—Å—á—ë—Ç –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∞—É–¥–∏—Ç–∞
document.getElementById('btnAuditResult')?.addEventListener('click', async ()=>{
  const answers = getAuditAnswers();
  const total = 11;
  const score = Object.values(answers).reduce((s,a)=>s+(a.score||0),0);

  // –∫—Ä–∞—Å–∏–≤—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫: "N –±–∞–ª–ª/–±–∞–ª–ª–∞/–±–∞–ª–ª–æ–≤ –∏–∑ 11"
  const word = (n=>{
    if (n%100>=11 && n%100<=14) return '–±–∞–ª–ª–æ–≤';
    const m = n%10;
    if (m===1) return '–±–∞–ª–ª';
    if (m>=2 && m<=4) return '–±–∞–ª–ª–∞';
    return '–±–∞–ª–ª–æ–≤';
  })(score);
  const resultText = `${score} ${word} –∏–∑ 11`;

  // –≤–µ—Ä–¥–∏–∫—Ç
  let verdict = '–ù—É–∂–µ–Ω –∞—É–¥–∏—Ç';
  let advice  = '–¢—Ä–µ–±—É–µ—Ç—Å—è –ø–µ—Ä–µ—Å–º–æ—Ç—Ä –ø–∞—Ä–∫–∞ –∏ –±—é–¥–∂–µ—Ç–∞.';
  if (score >= 9){ verdict='–ó—Ä–µ–ª–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞'; advice='–£ –≤–∞—Å –≤—Å—ë –ø–æ–¥ –∫–æ–Ω—Ç—Ä–æ–ª–µ–º, –ø—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ.'; }
  else if (score >= 6){ verdict='–ß–∞—Å—Ç–∏—á–Ω—ã–π –∫–æ–Ω—Ç—Ä–æ–ª—å'; advice='–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º —É—Ç–æ—á–Ω–∏—Ç—å –±—é–¥–∂–µ—Ç –∏ –ø—Ä–æ—Ü–µ—Å—Å—ã.'; }

  // –ø–æ–∫–∞–∑–∞—Ç—å –≤ UI
  const txt = document.getElementById('resultText');
  txt.innerHTML = resultText;

  try{
    const payload = {
      type: 'result',
      score,
      verdict,
      advice,
      answers: Object.fromEntries(Object.entries(answers).map(([k,v])=>[k,v.text]))
    };
    await fetch(HOOK + '?q=' + encodeURIComponent(JSON.stringify(payload)));
  }catch(e){
    // –Ω–µ –º–µ—à–∞–µ–º UX ‚Äî –ø—Ä–æ—Å—Ç–æ —Ç–∏—Ö–æ
  }

  // –ø—Ä–æ–º–æ—Ç–∞—Ç—å –∫ –±–ª–æ–∫—É —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ (–ø–æ –ø—Ä–æ—Å—å–±–µ ‚Äî –±–µ–∑ –∞–≤—Ç–æ-—Å–∫—Ä–æ–ª–ª–∞, –æ—Å—Ç–∞–≤–∏–º –Ω–∞ –º–µ—Å—Ç–µ)
});

// ==== –ö–ù–û–ü–ö–ò –ù–ê–í–ò–ì–ê–¶–ò–ò ======================================================
btnGoAudit?.addEventListener('click', ()=> showScreen('audit'));
btnGoPoll ?.addEventListener('click', ()=> showScreen('poll'));
backFromAudit?.addEventListener('click', ()=> showScreen('start'));
backFromPoll ?.addEventListener('click', ()=> showScreen('start'));

// ==== –¢–û–°–¢ ================================================================
function toast(text){
  const wrap = document.createElement('div');
  wrap.className = 'toast-overlay';
  wrap.innerHTML = `
    <div class="toast-box">
      <div style="margin-bottom:10px">${text}</div>
      <button class="btn btn-primary" type="button">OK</button>
    </div>`;
  document.body.appendChild(wrap);
  wrap.querySelector('button').onclick = ()=> document.body.removeChild(wrap);
  wrap.addEventListener('click', (e)=>{ if (e.target===wrap) document.body.removeChild(wrap); });
}

// ==== –°–¢–ê–†–¢ ================================================================
showScreen('start');
